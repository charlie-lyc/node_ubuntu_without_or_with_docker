# Install NVM
$ apt update
$ apt upgrade
$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
$ nvm -v

# Install Node
$ nvm install 20
$ nvm use 20
$ node -v
$ npm -v

# Upload project or clone git
$ git clone <git_url_project>

# Install dependencies
$ cd <project>
$ npm install

# Build the React application
$ cd <project>
$ npm run build

# Install Node server
$ npm install -g serve

# Serve static: folder name is probably 'build' or 'dist'?
$ serve -s <folder_name> -p <port_number>

# Install process manager
$ npm install -g pm2

# Serve in background
$ pm2 serve <folder_name> <port_number> --name <app_name>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Restart rebooting
$ pm2 startup
...
# And freeze process list
$ pm2 save
...
# Or remove init script
$ pm2 unstartup systemd

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
## VERY USEFUL when host machine doesn't support latest version of Node on host machine!

# Install docker
$ apt update
$ apt upgrade
$ apt install docker.io

# Pull docker image
$ docker pull node:20

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Write Dockerfile

# Use an official Node.js runtime as a parent image
FROM node:20

# Set the working directory in the container
WORKDIR /app

# Copy the application code to the working directory
COPY . .

# Install dependencies
RUN npm install

# Build the React application
RUN npm run build

# Install a simple HTTP server to serve the static files
RUN npm install -g serve

# Expose the port the app runs on
EXPOSE 8080

# Set the command to run the app
CMD ["serve", "-s", "dist", "-p", "8080"]

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Buid docker image with Dockerfile
$ docker build -t <image_name> node:20

# Run docker container
$ docker run --restart always --name <container_name> -p 8080:8080 -d node:20
